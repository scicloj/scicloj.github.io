var suggestions=document.getElementById('suggestions'),search=document.getElementById('search');search!==null&&document.addEventListener('keydown',inputFocus);function inputFocus(a){a.ctrlKey&&a.key==='/'&&(a.preventDefault(),search.focus()),a.key==='Escape'&&(search.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(c){const d=suggestions.classList.contains('d-none');if(d)return;const a=[...suggestions.querySelectorAll('a')];if(a.length===0)return;const b=a.indexOf(document.activeElement);if(c.key==="ArrowUp"){c.preventDefault();const d=b>0?b-1:0;a[d].focus()}else if(c.key==="ArrowDown"){c.preventDefault();const d=b+1<a.length?b+1:b;a[d].focus()}}(function(){var a=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});a.add({id:0,href:"/docs/community/about/",title:"About Scicloj",description:"What #\rScicloj is an open, free and dynamic hub for building a Clojure ecosystem for data science, scientific computing and data engineering.\nIn short, it is for anyone who is interested in using Clojure to work with data.\nThere are various places where activities move forward (for more info check the Where section), and they are all open to discussion and contribution.\nWho #\rWe are Clojurians coming from very different backgrounds and with very different levels of knowledge around Clojure and data science who share a common goal: making Clojure and data science better by combining them.",content:"What #\rScicloj is an open, free and dynamic hub for building a Clojure ecosystem for data science, scientific computing and data engineering.\nIn short, it is for anyone who is interested in using Clojure to work with data.\nThere are various places where activities move forward (for more info check the Where section), and they are all open to discussion and contribution.\nWho #\rWe are Clojurians coming from very different backgrounds and with very different levels of knowledge around Clojure and data science who share a common goal: making Clojure and data science better by combining them.\nEveryone is welcome to contribute, to consume and to use Scicloj however they like.\nWhy #\rA few people met on the internet one day and they all shared the same thought: Clojure is great, data science is cool, let\u0026rsquo;s put them together to make a crying rainbow of awesomeness! The first issues encountered led to a couple of revelations: Clojure is indeed cool, but data science relies heavily on FOSS libraries and tools that in Clojureland are all scattered around and usually poorly documented.\nScicloj is an umbrella for libraries, tutorials, ideas and open discussion trying to move further the idea that not only data science is possible with Clojure, but it can be a very nice experience as well (and it just works!).\nHow #\rScicloj tries to create broad discussions, where community members can reason together about their common goals.\nAt the same time, it maintains dedicated task groups that can have discussion around certain topics, such as: machine learning, wrapping useful data science libraries for use with Clojure, writing tutorials, organizing the community, editing the Scicloj website, and more.\nIn addition to textual, everyday discussions, Scicloj encourages meetings in small groups, as well as larger gatherings.\nWhere #\rContact details\n"}).add({id:1,href:"/docs/community/getting_involved/",title:"Getting Involved",description:"Would you like to join our journey in making Clojure a joyful platform for data science?\nBelow are some suggested ways to get involved. If you are interested in any of these, or maybe have some other idea - then let us talk! We may possibly help in finding a nice way to begin.\nLet us talk\nJoin our Open Source Mentoring program #\rOur Open Source Mentoring program offers a clear path to becoming a contributor on Scicloj open source projects.",content:" Would you like to join our journey in making Clojure a joyful platform for data science?\nBelow are some suggested ways to get involved. If you are interested in any of these, or maybe have some other idea - then let us talk! We may possibly help in finding a nice way to begin.\nLet us talk\nJoin our Open Source Mentoring program #\rOur Open Source Mentoring program offers a clear path to becoming a contributor on Scicloj open source projects.\nJoin our dev and study groups #\rScicloj is organizing a few dev groups and study groups that meet regularly to learn, to brainstorm, and to create. Your perspective could be helpful there.\nShare your experience #\rHearing about your personal workflow, data stories, problems and ideas can be valuable to others. Just open a new topic at one of the other relevant chat streams, and share your thoughts.\nWrite a tutorial #\rWriting tutorials (either small or big) about working with data is central to our process. The importance is twofold: sharing realistic experiences, and realizing what may be missing or could be improved in our stack. You may just pick an existing tutorial and translate it to Clojure. Or, you can pick some fresh new data and start analysing them from scratch.\nJoin the organizing team #\rAre you interested in the human aspects of growing the community? Or, do you want to be involved in the thought process about the goals and priorities of this community? Then the scicloj organizing team would welcome you to join. Even if your time is limited, contributing your thought can be important.\nPair with a library author #\rLibrary authors need users. Some of the actively developed libraries would benefit a lot from a user trying to use them and sharing their findings.\nHelp building the website and knowledge base #\rThe scicloj website would love to have more people involved in it. Contributing to the content organization, writing opinionated blog posts, helping with the aesthetics \u0026ndash; all would be welcome.\nCreate some proof of concept #\rDo you think that something is missing in our stack? Then let us maybe create it! Beginning with a small proof of concept, you can test the idea with other community members. If you suggest your idea, maybe someone will be happy to join you, and you create it together.\nContribute to a library #\rIs there any library that you are curious to learn about or just want to help building? Then a good way to learn may be to contribute. This may be some help in adding a feature, adding some tests, or writing documentation. You can offer that to the library author. Some would be happy and might offer a nice way to begin.\nSubmit an issue #\rHave you found a bug or a missing feature? Probably, the maintainers of actively developed libraries would be happy to know about it. Usually, the project Issues page or the project Zulip stream would be the place to do that. Most projects mention the preferred ways of communication in their README.\n"}).add({id:2,href:"/docs/community/chat/",title:"Chat",description:"The Clojurians Zulip #\rMost of our communication takes place in specific streams (also called channels) at the Clojurians Zulip chat.\nSmall task groups often create ad-hoc streams for their task, but a lot of the communitcation takes place in more popular, long-living streams (examples below).\nMost streams are public, some are private. Usually, streams are chosen to be private not for secrecy, but for focus, and for creating an atmosphere where people are comfortable talking, knowing who are listening.",content:"The Clojurians Zulip #\rMost of our communication takes place in specific streams (also called channels) at the Clojurians Zulip chat.\nSmall task groups often create ad-hoc streams for their task, but a lot of the communitcation takes place in more popular, long-living streams (examples below).\nMost streams are public, some are private. Usually, streams are chosen to be private not for secrecy, but for focus, and for creating an atmosphere where people are comfortable talking, knowing who are listening.\nThis original announcement of the Clojurians Zulip by Gert Goet gives some context and explains why it makes sense for some parts of the Clojure community to move into Zulip. Scicloj followed that advice.\nRelevant active streams #\rHere are the main scicloj-related active streams, dedicated to certain subgroups, child communities or sister communities of scicloj.\nGeneral discussion and Q\u0026amp;A #\r #data-science - general data science topics  Dev chat of specific topics, tools and libraries #\r  #noj-dev - discussing the development of Noj\n  #tech.ml.dataset.dev - discussing tech.ml.dataset\n  #clay-dev - discussing the development of Clay\n  #kindly-dev - discussing the development of Kindly and related libraries\n  #tableplot-dev - development of Tableplot\n  #tablemath-dev - development of Tablemath\n  #wolfram-clojure-bridge - a stream for the dvelopment of Wolframite, a Clojure bridge to the Wolfram language\n  #uncomplicate - discussions about developing with Neanderthal, Deep Diamond, and other Uncomplicate libs\n  #scicloj.ml-dev - discussing scicloj.ml\n  #cljplot-dev - cljplot develompemt\n  #saite-dev - development of Saite and related projects such as Hanami\n  #libpython-clj-dev - libpython-clj development and usage\n  #libapl-clj-dev - libapl-clj development and usage\n  #clojisr-dev - clojisr development\n  #r-interop - R-interop development and usage: various libraries such as graalvm-interop and clojisr\n  #dsp - discussions of Digital Signal Processing with Fastmath, Supercollider, Overtone, etc.\n  Active study groups / dev groups #\rFor more information, see also the list of dev \u0026amp; study groups at the website.\n  #scinoj-light-1 - discussing the first Scinoj Light conference\n  #scicloj-open-source-mentoring - discussing the Scicloj Open Source Mentoring program\n  #real-world-data - a stream for the real-world-data study group, discussing uses of Clojure in real-world data projects.\n  #data-recur - recurring updates \u0026amp; discussions around building the emerging data stack\n  #visual-tools - the stream of the visual-tools group, discussing collaborations around tooling for data visualization and literate programming\n  #scicloj-ai-meetups - chat for the new scicloj-ai-meetups dev group.\n  #scicloj-org - a private stream of the scicloj organizing team - for anybody interested in building the scicloj community and discssing its goals and priorities - let us talk if you wish to join.\n  General streams worth knowing about: #\r  #announce - aggregation of announcements of other Clojure communication platforms (Clojureverse, Reddit /r/Clojure, etc.)\n  #beginners\n  #clojure - general Clojure discussions\n  #slack-archive - an archive of selected channels of the Clojurians Slack (if some channel you like is not there, you may ask the admins at the #zulip stream to add it)\n  #new-members - introductions of new Clojurians Zulip members\n  #zulip - discussing the Zulip platform, asking for technical help\n  Inactive streams of the past, that might be of interest #\r  #ds4clj - the Data Science for Clojure Devs course\n  #sci-fu - Scicloj foundations study group - learning together to build the Clojure data science ecosystem\n  #ml-study - machine learning and data analysis study sessions\n  #sicmutils - updates and discussions about sicmutils and its study group\n  #scicloj-tutorials - discussing community efforts for creating tutorials (a bit inactive as of 2022 Q1)\n  #covid-19 - studying COVID-19 data (past hackathons and general discussions)\n  #nov21-workshops - a stream for the re:Clojure 2021 workshops\n  #dec21-data-science-special - a stream for the 2021 re:Clojure Data Science Special event\n  #notespace-dev - notespace development\n  #pink-gorilla-dev - development of Pink Gorilla\n  Recommended practices #\rYou may wish to learn a little bit about the concepts of Zulip streams and topics. Note that all streams and topics (and even single messages) have URLs, that you can open at separate tabs in your browser.\nWhen joining Zulip, it is a good idea to present yourself at the #new-members / hello topic, and in general, at topics called \u0026lsquo;hello\u0026rsquo; or \u0026lsquo;personal introductions\u0026rsquo; at specific streams you are subscribing to, mainly this \u0026lsquo;hello\u0026rsquo; topic at the #data-science stream.\nWhen reading the feed to cactch up, it is sometimes comfortable to browse through the aggregate feed of all streams, or at the feed of a specific stream, such as #data-science.\nWhen writing messages, it is recommended to be at the page of a specific topic, e.g. #data-science / tech.ml.dataset. That would prevent some very common mistake, of writing under the wrong topic.\nYou may wish to configure the streams-notifications behaviours to your taste.\nTo discover conversations relevant to you, you may browse and subscribe to streams. To see the feed of all public streams, including those you are not subscribed to, you can look at this URL (note that we are filtering out the huge #slack-archive stream).\n"}).add({id:3,href:"/docs/community/events/",title:"Events",description:"Our public events are shared at the Clojure calendar feed and at the various Clojure social platforms\nYou are encouaged to add the feed to your calendar and follow look into it through the online viewer.",content:"Our public events are shared at the Clojure calendar feed and at the various Clojure social platforms\nYou are encouaged to add the feed to your calendar and follow look into it through the online viewer.\n"}).add({id:4,href:"/docs/community/contact/",title:"Contact",description:" scicloj@gmail.com GitHub Zulip Chat streams  Main data science stream   Youtube  ",content:" scicloj@gmail.com GitHub Zulip Chat streams  Main data science stream   Youtube  "}).add({id:5,href:"/docs/resources/libs/",title:"Tools and libraries",description:"Clojure tools and libraries for data and science",content:" To supplement our opinionated discussions of the ecosystem, here is a less-opinionated, plain list of relevant libraries written by Clojurians. Not all libraries mentioned here are affiliated with Scicloj, but we seek to be in dialogue with library authors as much as possible.\nDo you know about anything relevant that is missing here? - Let us talk!\nFor every library, we mark whether it is actively developed (act), and whether it is still experimental (exp). A star (⭐) means that we know the library to be actively used and useful.\nWe tag libraries with the field they are relevant to.\n array - array programming tensor - tensor programming linalg - linear algebra native - interop with native-optimized libraries gpu - gpu support vis - data visualization and visual art vega - visualization using Vega/Vega-lite specifications lit - literate programming ui - building UIs for data exploration geo - geographical and geometrical data processing df - dataframe-like data structures and abstractions data - general data processing csv - csv import/export xl - Excel spreadsheets interaction json - json import/export xform - transducers support math - diverse math functions stat - statistics ts - time series analysis rand - simulation and random sampling prob - Bayesian computing and probabilistic programming ml - machine learning dnn - deep learning opt - optimization graph - graph algorithms and network analysis interop - general libraries for interop cljs - supports not only Clojure but also Clojurescript nlp - natural language processing llm - large language models and related services  Other lists 🔗 #\rThese other lists of libraries are very relevant to the emerging Clojure data science stack:\n Clojurelog ⭐ by the XTDB team - a comparison of various Clojure-Datalog databases Clojure DSL resources ⭐ by Simon Gray - a curated list of mostly mature and/or actively developed Clojure resources relevant for dealing with domain-specific languages, in particular parsing and data transformation with/of DSLs. Clojure graph resources ⭐ by Simon Gray - a curated list of mostly mature and/or actively developed Clojure resources relevant for dealing with graph-like data  Diverse toolsets #\r noj ⭐ (act): - an toolkit with the main relevant Scicloj libraries fastmath ⭐ (act): math,ml,rand,stat - a collection of functions for mathematical and statistical computing, machine learning, etc., wrapping several JVM libraries spork (act): df,graph,opt,rand,ui,vis - a toolbox for data-science and operation research Incanter: csv,df,rand,stat,vis - an R-like data-science platform built on top of the core.matrix abstractions huri: df,stat,vis - a toolbox for data-science using plain sequences of maps  Optimization #\r matlib ⭐ (act): opt - optimisation and control theory tools and convenience functions based on Neanderthal.  Visual tools: literate programming and data visualization #\r Clay ⭐ (act): cljs,lit,vega,vis - a REPL-friendly tool for notebooks and datavis Saite ⭐ (act): cljs,hiccup,lit,ui,vega,vis - data exploration, dashboards, and interactive documents Clerk ⭐ (act): cljs,lit,vega,vis - local-first notebooks for Clojure Oz (act): lit,vega,vis - data visuzliation using Vega/Vega-Lite and Hiccup, and a live-reload platform for literate-programming rmarkdown-clojure ⭐: lit,vis - rendering Clojure code in various format using Rmarkdown Pink-Gorilla/Goldly ⭐ (act): cljs,exp,lit,ui,vis - a port of the Gorilla REPL project using a Clojurescript (Reagent) frontend Org-babel-clojure ⭐: lt - executing Clojure inside Emacs Org-mode documents Devcards ⭐: cljs,lit - visual repl exprience for Clojurescript Notespace: lit - notebook experience with Clojure namespaces edited at any editor Reveal ⭐ (act): - browser-based data navigation GUI Portal ⭐ (act): - desktop data navigation GUI Gorilla-REPL: lit - a notebook application written in Clojure and Javascript proto-repl-charts: vis - an Atom plugin for displaying tables and graphs Maria (act): cljs,lit,vis - a Clojurescript coding environment for beginners emmy-viewers ⭐ (act): cljs,vis - High-performance symbolic, 2D and 3D visual extensions to the Emmy computer algebra system  Vega rendering #\rIn addition to a few of the tools mentioned above, here is a list of dedicated tools dedicated mainly to handling Vega/Vega-lite specifications. See this conversation for some discussion of the differences and tradeoffs across these tools.\n darkstar ⭐: vega,vis - a minimal wrapper over Vega/Vega-lite as a single JVM-only Clojure library, using the GraalJS javascript runtime, which does not require GraalVM runtime to run. xvsy: cljs,vega,vis - grammer of graphics over Vega Vegan (act): vega,vis - a nodejs clojurescript library designed to validate and render Vega and Vega-lite files, supports docker-based setup Vega-clj (act): vega,vis - a clojure wrapper for the (node-based) Vega-cli and Vega-lite standalone scrips Optikon: vega,vis - a command line tool that wraps Vega and Vega-lite, using GraalVM polyglot programming Vegafx: vega,vis - a static-site viewer using javafx that renders Vega specs VL example gallery as EDN: - The vega lite example in EDN format, ready to be copy/pasted into Clojure code  Data visualization libraries #\r Tableplot ⭐ (act): exp,vis - easy layered graphics with Hanami \u0026amp; Tablecloth cljplot ⭐ (act): exp,vis - a data visualization platform written in Clojure and inspired by R\u0026rsquo;s ggplot2 and lattice libraries Hanami ⭐ (act): cljs,hiccup,ui,vega,vis - a template system for creating interactive data visualizations using Vega/Vega-lite, Reagent and Re-Com viz.clj: exp,vega,vis - a data visualization library for beginners (WIP) Clojure2D ⭐ (act): vis - Java2D wrapper + creative coding supporting functions (based on Processing and openFrameworks) Quil ⭐: vis - a clojure/clojuresctit wrapper for Processing thi-ng/geom ⭐: cljs,vis - 2d/3d geometry toolkit Gorilla-plot: vega,vis - plotting functions using Vega for Gorilla-REPL gg4clj: r,vis - a clojure DSL for creating ggplot2 plots using R gg4clj port: - by the Pink Gorilla project Analemma: cljs,exp,vis - generating charts and SVG with a syntax similar to Incanter\u0026rsquo;s and a visual theme similar to ggplot2. emacs-Vega-view (act): vega,vis - an emacs mode to facilitate interactive data visualization using Vega from within emacs. Supports elisp, json and clojure notations  Data processing #\r ham-fisted ⭐ (act): data - data structures, functions, and macros for efficient functional programming in the JVM Specter ⭐ (act): cljs,data - declarative navigation of nested data structures for selection and transformation in Clojure and Clojurescript Meander ⭐ (act): cljs,data - transforming neseted data structures by declaratively declaring the shape of source and target datastructures xforms ⭐: cljs,data,xform - a collection of transduces and reducing functions Odin: data - processing nested data structures by extensible logic programming Charred ⭐ (act): csv,json - zero dependency efficient read/write of json and csv data. Semantic Csv: cljs,csv - higher level csv parsing/processing  Geospatial processing #\r geo ⭐: geo - unifying several JVM libraries for geoprocessing with a Clojure API ovid ⭐: exp,geo - protocols for geospatial concepts aurelius ⭐: exp,geo,xform - transducible analysis of geospatial features geo-clj ⭐: cljs,geo - encoding/decoding of geographic datatypes  Dataframe-like structures #\r tech.ml.dataset ⭐ (act): csv,df,stat,vis - abstractions for dataframe-like structures in clojure, based on dtype-next infrastructure tablecloth ⭐ (act): csv,df - a dataframe grammar wrapping tech.ml.dataset, inspired by serveral R libraries clojask ⭐ (act): df - a library for parallel computing of larger-than-memory datasets. datajure (act): df - a domain-specific language for data processing wrapping libraries such as tech.ml.dataset, tablecloth, clojask, and geni Panthera: df,py - a Clojure API wrapping Python\u0026rsquo;s Pandas library koala: csv,df,exp - Pandas-like data-processing for clojure with some I/O functionality (experimental) dataframe: df - Pandas-like data processing for clojure danzig (act): df,exp,xform - Pandas-like data processing using transducers (danzig was formerly named wombat) bamboo: df - a minimal data processing library for Clojure, with some of the capabilities of pandas and numpy see also geni ⭐ under the Spark sub category below  Spreadsheets #\r Docjure ⭐ (act): xl - making it easy to read and write Excel spreadsheets as Clojure data kixi.large ⭐ (act): exp,xl - a tech.ml.dataset-friendly fork of Docjure, providing clear entry point at the workbook and sheet level and a way to insert images Excel-clj ⭐ (act): xl - building Excel spreadsheets from Clojure data in various forms such as trees, tables, and more fxl ⭐ (act): xl - manipulating spreadsheets with a versatile API for handling various spreadsheet constructs Excel-templates: exp,xl - building Excel spreadsheets from Clojure data combined with an Excel sheet serving as a template xl-parse-clj: exp,xl - converting an Excel workbook to Clojure code  Array programming, linear algebra #\r dtype-next ⭐ (act): array,native,stat,tensor - abstractions and foundations for working with array-like structures and sequential structures Neanderthal ⭐ (act): array,gpu,linalg,native - matrix and linear algebra in Clojure tvm-clj (act): array,exp,gpu,linalg,native - bindings to tvm Geometric Algebra (act): linalg,math - A library to do geometric algebra jutsu.matrix: array,gpu,linalg,native - bindigs to ND4J core.matrix: array,cljs,linalg,native - matrix abstractions, supporting diffent backends denisovan: array,gpu,linalg,native - Neanderthal backend for core.matrix  Deep learning #\r Deep Diamond ⭐ (act): dnn,gpu,native,tensor - infrastructure for tensor computation and deep learning clj-djl ⭐ (act): dnn,gpu,native,tensor - a wrapper for the Deep Java Library MXNet: dnn - bindings to Apache MXNet, a part of the MXNet project jutsu.ai: dnn - a wrapper for deeplearning4j Cortex: dnn - a deep learning library written in Clojure Flare: dnn - dynamic neural networks in Clojure  Statistics #\r kixi.stats ⭐ (act): rand,stat,xform - statistics and random sampling using transducers fitdistr ⭐ (act): stat - fitting distributions  Time series analysis #\r tide: ts - STL and FastDTW algorithms  Bayesian computing \u0026amp; probabilistic programming #\r inferme ⭐ (act): prob,rand,vis - extensible probabilistic programming in Clojure itself (rather than a language variation), with support for visualizations Gen.clj ⭐ (act): prob,rand - A stack for generative modeling and probabilistic inference. cmdstan-clj ⭐ (act): exp - Using the Stan statistical modelling language from Clojure using the CmdStan CLI clj-stan: - A library for calling the Stan language from Clojure (by shelling out to cmdstan). bayadera: gpu,prob,rand,stat - Bayesian computing using the GPU sampling: rand - support srandom sampling of different kinds distributions: prob,rand - random sampling and some basic Bayesian computing for certain families of distributions metaprob: cljs,exp,prob,rand - an embedded languages for probabilistic programming and metaprogramming daphne: exp,prob - a probabilisic programming compiler from Clojure syntax to Pytorch anglican: cljs,prob,rand - a probabilistic programming language written in clojure, that supports a subset of clojure  Random sampling and simulations #\r masonclj ⭐ (act): rand - a Clojure wrapper of MASON, which is a Java library for discrete-event multiagent simulation and agent-based modeling. dsim.cljc ⭐ (act): cljs,rand - an event-driven engine for Clojure(script) heavily borrowing ideas from discrete-event simulation and hybrid dynamical systems date-gen (act): rand - randomized date generation supporting CSV output drand: rand - a client to the Drand randomness service  Science #\r emmy ⭐ (act): - (was SICMUtils) a library for algebra, calculus, differential geometry and physics based on the SICM book by Sussman \u0026amp; Wisdom cljbox2d ⭐ (act): cljs - a Clojure/Clojurescript wrapper of the Box2D physics engine API  Machine learning #\r scicloj.ml ⭐ (act): ml - A machine learning platform supporting a large collection of algorithms and pipeline ergonomics clj-ml: ml - machine learning based on wrapping libraries such as the Weka Java library clj-boost: ml - a wrapper for XGBoost propaganda: ml - an implementation of the propagator computational model dvc: ml - A programming language independent tool for ML experiment tracking, Clojure fully supported  Genetic programming #\r Propeller ⭐ (act): ml - \u0026ldquo;Yet another Push-based genetic programming system in Clojure\u0026rdquo; Clojush (act): ml - an implementation of the Push programming language for genetic programming  Natural Language Processing #\r DataLinguist ⭐ (act): nlp - a Clojure wrapper for Stanford CoreNLP  Large Language Models and related services #\r Bosquet ⭐ (act): llm - LLMOps for Large Language Model based applications llama.clj ⭐ (act): llm - A wrapper of llama.cpp clip.clj ⭐ (act): llm - A wrapper for clip.cpp for embeddins of images and text Ragtacts ⭐ (act): llm - A set of functions for building LLM applications including RAGs. cohere-clojure ⭐ (act): llm - An Unofficial port of the Cohere SDK openai-clojure ⭐ (act): llm - A wrapper of the OpenAI API and Azure OpenAI API openai-api ⭐ (act): llm - A wrapper of the OpenAI API multi-gpt ⭐ (act): llm - A wrapper of the Open AI GPT Chat API with conversational memory and WIP agents support vald-client-clj ⭐ (act): llm - A gRPC client library for the Vald distributed vector database simix ⭐: llm - Similarity search for Cloure, build on top of hnsw clojurellm-data ⭐ (act): llm - Dataset curation for fine tuning an LLM for Clojure instructor-clj (act): llm - A library inspired by instructor, making it easy to have structured output from LLMs (using Malli for defining schemas)  Interop #\r clj-polyglot-app ⭐ (act): interop - A deps-new template to create a polyglot app in Clojure (Clojure, R, \u0026amp; Python) Libpython-clj ⭐ (act): interop - interop with Python clj-python-trampoline: interop - using libpython-clj from an already running python process, without needing any special python builds Libjulia-clj ⭐ (act): interop - Julia bindings for Clojure Wolframite ⭐ (act): interop - interop with Wolfram language ClojisR ⭐ (act): interop - interop with R and Renjin (R on the JVM) graalvm-interop: interop - interop with FastR (GraalVM\u0026rsquo;s R) rdata: - A Renjin (pure-JVM R) wrapper to allow Clojure programs to easily read R\u0026rsquo;s RData file format from-scala: interop - interop with Scala Interop template project: interop - A project template which configure several interop libraries automaticaly using Docker other R interop libraries  Parallel computing #\r claypoole ⭐ (act): for,future,pmap - threadpool-based parallel versions of Clojure functions such as pmap, future, and for parallel ⭐: - parallel-enabled functions, addditional transducers and supporting utilities tesser ⭐: - a library for concurrent \u0026amp; commutative folds, including some statistical tasks and Hadoop support tech.parallel ⭐ (act): - parallelization and threading primitives  Distributed computing #\r titanoboa ⭐ (act): - a fully distributed, highly scalable and fault tolerant workflow orchestration platform onyx ⭐: - a library for distributed computation in the cloud overseer: - a library for building and running data pipelines  Hadoop #\r Parkour: - Hadoop MapReduce in idiomatic Clojure  Spark #\r geni ⭐ (act): df - a Spark wrapper sparkling: - a Spark wrapper flambo: - a Spark wrapper  Stream processing #\rKafka #\r jackdaw ⭐ (act): - a wrapper for Kafka and Kafka Streams kafka.clj ⭐ (act): - a wrapper for Kafka and Kafka Streams ksml ⭐ (act): - representing kafka streams topologies as data rp-jackdaw-clj: - various components for interacting with Kafka using Jackdaw  Datasets #\r hdfs-clj ⭐ (act): - Access to HuggingFace datasets via Clojure  "}).add({id:6,href:"/docs/resources/reading/",title:"Reading",description:"Recommended reading",content:" Here are some suggested reading materials.\nDo you wish to add your tutorial to this list? Do you have any suggestions for this list? - Let us talk!\nScicloj resources #\r The Noj book - Documenting Noj, the main recommended stack of data \u0026amp; science libraries The Clojure Data Tutorials - a community-driven collection of reproducible tutorials, organized using devcontainers The Clojure Data Scrapbook - a community-driven collection of tutorials, with a bit less strict workflow  Contributions are welcome. 👋\nBlogs #\r  TechAscent Blog by the group behind a few of the Clojure high-performance and data-analytics libraries (mostly those at techascent, as well as dtype-next and libpython-clj)\n  Clojure Tidy Tuesdays by Kira McLean - Clojure data explorations of datasets shared in the R community\n  Code with Kira - by Kira McLean - in partucular:\n Data Manipulation in Clojure Compared to R and Python (2024-07-18) The Current State of ML in Clojure (2024-04-05)    eion.site by Eoin Carney has various data-related blog posts - in particular:\n a Clojure Tidy Tuesdays collection of notebooks    Blog posts by Timothy Pratley\n Exploring probability distributions (2024-07) ClojureTV video views analysis (2024-06)    Squid\u0026rsquo;s Blogs by Carin Meier - deep learning, MXNet, Python interop and other technical topics\n  Dragan Djuric - numerical computing, linear algebra, high performance computing and deep learning\n  Atabey Kaygun - math, algorithms, machine learning, and data science topics demonstrated through Clojure and other Lisp dialects - in particular, Graph Algorithms in Clojure with JGraphT (2023-01-14) and many others\n  Thomas-Sojka - data visualization and other topics - in particular: hiccup-d3 - a gallery of Hiccup D3-charts in Clojurescript\n  Georgy Toporkov\u0026rsquo;s Lebenswelt - Data processing, publishing, and other topics - in particular: Dealing with out-of-memory faulty csv’s with Clojure, Duckdb, and Parquet (2024-01-22)\n  Arthur Caillau\u0026rsquo;s Blog - featuring the \u0026ldquo;MXNet made simple\u0026rdquo; series - deep learning from Clojure\n  Christopher Small - discussing the development of Oz, among other things\n  Clojure Goes Fast - overviews tools and practices for profiling and improving performance in Clojure\n  Applied Science blog by Dave Liepmann, Matt Huebert and Jack Rusher - Deep learning, data visualization, data processing\n  Other collections of notes #\r Mentat Collective - documenting an emerging stack of libraries and tools for math, physics, and data visualization  Tutorials #\rGeneral Nextjournal collections #\r  Dieter Komentera - various topics\n  Tomasz Sulej - various topics\n  Alan Marazzi - various topics\n  Carin Meier - mainly Python interop\n  Chris Nuernberger - mainly Python interop\n  Statistics #\r Statistical Computing in Clojure: Functional Approaches to Unsupervised Learning (PCA with Neanderthal) by Jaryt Salvo, Dec. 2024  Math #\r  Fastmath tutorials\n  Structure and Interpretation of Classical Mechanics with the Emmy Algebra System by Markus Agwin, Jan 2025\n  Math for clojurists by Alan Marazzi\n  Probabilistic programming #\r gen.clj tutorial  Data processing #\r Tablecloth tutorial  Transducers #\r A general introduction by Amit Ramon  Machine Learning #\rXGBoost #\r clj-boost - A tutorial by Alan Marazzi  Python interop #\r See mainly the growing list of tutorials at Squid\u0026rsquo;s Blogs mentioned above.  Plotting #\r vega-lite example Gallery in EDN by Carsten Behring Fun With Matplotlib by Chris Nuernberger. Panthera tutorials  R interop #\r Clojisr tutorials Clojisr examples with lots of vizualiations, by Tomsaz Sulej and others  Literate programming #\r Clojupyter examples Clay tutorial  Data Visualization #\r Vega-Lite example gallery in EDN by Carsten Behring vdquil - Examples from Ben Fry\u0026rsquo;s \u0026ldquo;Visualizing Data\u0026rdquo; in quil - by Dave Liepmann  Colors #\r clojure2d.color documentation - path of the clojure2d library  Algorithms #\r High-Dimensional Computing With Sparse Vectors Using Clojure by Benjamin Schwerdtner, Sep. 2024  Books #\r  Books by Dragan Djuric about Deep Learning and about Linear Algebra in Clojure - books developed alongside Dragan\u0026rsquo;s work on libraries in this fields\n  Clojure for Data Science by Henry Garner - a bit dated in terms of the stack it presents, but stll relevant in terms of the principles presented\n  Practical Artificial Intelligence by Mark Watson\n  Other collections of resources #\r  Resources for Clojure beginners collected by Dmitri Sotnikov\n  An intro to Clojure by Chris Nuernberger, inviting newcomers, mostly Pythonistas, to some of its core ideas\n  "}).add({id:7,href:"/docs/resources/video/",title:"Video",description:"video resources",content:"Tutorial videos #\r  2025-01-24 - Noj v2 - getting started - from raw data to a blog post\n  2024-12-14 - PCA in Clojure with Neanderthal by Jaryt Salvo\n  2024-03-30 - OBSOLETE - Noj - getting started - from raw data to a blog post - note this is about Noj v1\n  Clojure Conj 2024 #\r \u0026ldquo;Scientific Clojure, a bird\u0026rsquo;s eye view\u0026rdquo; by Thomas Clark \u0026ldquo;Crafting Artisanal Vector Graphics\u0026rdquo; by Timothy Pratley and Chris Houser \u0026ldquo;Clojure for Criminal Defense\u0026rdquo; by Andrew Foltz-Morrison  Heart of Clojure 2024 #\r Sailing with Scicloj: A Bayesian Adventure\u0026quot; by Sami Kallinen  Clojure/Conj 2023 #\rA few of the Clojure/Conj talks were dedicated to infrastructure and applications of the emerging Clojure data science stack.\n \u0026ldquo;Vector Symbolic Architectures In Clojure\u0026rdquo; by Carin Meier  \u0026ldquo;High Performance Clojure\u0026rdquo; by Chris Nuernberger  \u0026ldquo;Clojure in the Fintech Ecosystem\u0026rdquo; by Philip Cooper  \u0026ldquo;Real @toms with Clojure!\u0026rdquo; by Thomas Clark and Daniel Slutsky (about Physics research with Clojure) \u0026ldquo;Comparing protein structures with Clojure\u0026rdquo; by Blaine Mooers \u0026ldquo;Clojure for Data Science in the Real World\u0026rdquo; by Kira McLean  reClojure #\rreClojure 2022 #\rScicloj was involved in organizing the reClojure 2022 event. A few of the talks were related to data \u0026amp; science topics.\n Dec. 2nd-3rd, conference talks - playlist  A Scicloj overview by Kira McLean: Data and Clojure: Using Clojure for more than software development - video    reClojure 2021 #\rScicloj joined the London Clojurians in organizing the reClojure 2021 event and its workshops - ⭐ The following playlists are recommended as an up-to-date look into a few parts of the emerging data-science stack. ⭐\n Dec. 5th, reClojure 2021 Data Science Special - playlist Dec. 3rd-4th, reClojure 2021 Conference - playlist  A Scicloj overview by Sami Kallinen and Ethan Miller: Clojure Emerging Data Ecosystem - video   Nov., reClojure 2021 Workshops - playlist  reClojure 2020 #\rThe reClojure 2020 conrefnere offered a few data \u0026amp; science talks.\n Dec. 4th-5th, conference talks - playlist  A Scicloj overview Sami Kallinen: How to build a Clojure Data Science Community - video  A pre-conference interview of Sami by Jordan Miller: \u0026ldquo;Sami Kallinen tackles tough questions on building a positive Sci-Cloj community\u0026rdquo; - video      Interviews #\r July 2024 - Daniel Slutsky interviewed by Timothy Pratley about Noj and other topics - video September 27th 2020 - Anthony Khong interviewed by Vijay Kiran, Teodor Heggelund and Daniel Slutsky about Geni - video April 26th 2020 - Chris Nuernberger interviewed by Teodor Heggelund, Tomasz Sulej and Daniel Slutsky - video June 30th 2019 - Jon Anthony interviewed about Hanami \u0026amp; Saite by Alan Marazzi, Ethan Zane Miller and Vijay Kiran - video  Public sessions of dev \u0026amp; study groups #\rscicloj-ai-meetups #\r Feb 22nd 2025 - meeting 1: voice-fn - real-time voice-enabled AI pipelines  real-world-data #\r(most content is only shared internally in the group chat)\n Mar 22nd 2024 - meeting 1:  Kyle Passarelli Adham Omran   April 19th 2024 - meeting 3: Bayesian Statistics with Stan by Daniel Slutsky August 23rd 2024 - meeting 12:  Blender \u0026amp; Basilisp, Wordpress \u0026amp; Phel - Jarkko Saltiola Noj, open-source-mentoring - Daniel Slutsky   Oct 4th 2024 - meeting 15:  Kyle Passarelli: OAuth2 with Clojure and Temporal Adham Omram: Experience Conducting a Clojure Training   Oct 16th 2024 - meeting 16:  Jarkko Saltiola: tools for pipelines, bb-glitchtip    ds4clj #\rAs of Fall 2022, the planned Data Science for Clojure devs course is delayed. Occaionally, we have ad-hoc exploration or prep meetings. Some recordings are shared publicly.\n Sep 10th, 2022 - NLP in Clojure Session 1: linguistics, spaCy, Libpython-clj Oct 30th, 2022 - NLP in Clojure Session 2: ml pipelines with DVC, Metamorph, scicloj.ml  data-recur #\rIn the data-recur group, Clojure devs are sharing updates and collaborating on tools \u0026amp; libraries of the emerging Clojure data stack.\n July 29th, 2022 - clojure.walk, community updates   Aug 27th, 2022 - Clojask, columns for Tablecloth Sep 30th, 2022 - Meander Nov 5h, 2022 - Intro to Tablecloth June 29th 2024 - Datajure - a DSL extension to existing data processing libraries Aug 8th 2024 - Clojure Meets Metal: Working with native libraries and the GPU Jan 31st 2025 - R4Clj 1: Introducing R and the Tidyverse  visual-tools #\rThe visual tools group is about creating collaborations across differnent tooling projects for data visualization and literate programming.\n Feb. 4th, 2022 - a first meeting of the visual-tools group Feb. 19th, 2022 - focusing on compatibility across tools Mar. 5th, 2022 - monthly - updates of ongoing projects Mar. 25th, 2022 - study session about Clerk Apr. 2nd, 2022 - monthly - updates of ongoing projects May 6th, 2022 - monthly - updates of ongoing projects May 27th, 2022 - a deep dive into Saturn June 3rd, 2022 - monthly - updates of ongoing projects: data cookbook, goldly studio, re-frame state management July 2nd, 2022 - monthly - updates of ongoing projects: clj-tiles, Obsidian Wielder, Cardigan Bay, Platypub Aug. 5th, 2022 - monthly - focusing on Oz Sep. 2nd, 2022 - monthly - tooling for learning resources, a peek into Data Rabbit Sep. 9nd, 2022 - special meeting - Data Rabbit Oct. 14th, 2022 - interactive visualizations: Shiny, Clojurescript Bayesian animations Oct. 23th, 2022 - knowledge management with play.teod.eu, a common ground for notes with Kindly Nov. 27th, 2022 - Calva Notebooks \u0026amp; Portal Apr. 1st, 2023 - various updates May 27th, 2023 - Mosaic and other updates Dec. 1st, 2023 - various updates: MetaREPL, Timespace Oracle, Meyvn templates, Kindly, Clay, Claykind Feb. 25th, 2024 - ggplot study session 1 Mar. 17th, 2024 - ggplot study session 2 Apr. 7th, 2024 - ggplot study session 3 Apr. 26th, 2024 - badspreadsheet \u0026amp; HTMX June 7th, 2024 - keg-party \u0026amp; HTMX June 16th, 2024 - Gemini, Space-Age, protocols from the REPL Jan 3rd, 2025 - Workflow Demos 1: Emacs, Cider, VSCode Calva, Zulip Jan 7th, 2025 - Workflow Demos 2: Emacs CIDER, Portal, Snitch, clj-reload, Cursive, Neovim Conjure, Parinfer Jan 15th, 2025 - Workflow Demos 3: FlowStorm Jan 23rd, 2025 - Workflow Demos 4: LLMs in Emacs for Clojure  llm meetups #\rThe goal of this series of meetups is to support our learning, as a community, of the new landscape of ideas around large language models.\n May 26th, 2023 - Introduction June 16th, 2023 - Prompt engineering and managing embeddings June 17th, 2023 - LLMOps with Bosquet July 14th, 2023 - Transformer-based generative LLMs Sep 24th, 2023 - Library overviews Nov 17th, 2023 - Implementing research papers with Bosquet  ml-study #\rThe ml-study group (on hold as of Feb. 2022) is about practicing the usage of the emerging Clojure data science stack. Most of its recordings have been shared internally at the Zulip chat. One of them was made public.\n Feb 28th 2021, 19:00 UTC - a public sessoin of the ml-study group about Notespace and Hanami - video  jointprob #\rJointprob is a study community for Bayesian statistics and probabilistic modelling, initiated by Scicloj. Most of its meetings have been recorded and shared internally. Some meetings are shared publicly.\n Aug 26th 2023 - Hierarchical Models with David MacGillivray  Scicloj talks #\r2021 #\r Feb 28th, 13:00 UTC - Anthony Khong' talk about fxl: a composable, data-oriented spreadsheet library - video Jan 28th, 4pm UTC - Alan Dipert: Common Lisp for the Curious Clojurian - details - video - slides  2020 #\r Dec 16th, 14:00 UTC (note the date change) - Nikita Prokopov about Skija \u0026ndash; graphics in the JVM - Video Dec 2nd, 14:00 UTC - Sicmutils #1 - geometry, symbolic math, and physics in Clojure(script) - background - video November 21st, 16:00 UTC - Joanne Cheng - Clojure in Geography #2 - video November 7th, 8pm UTC - Vlad Protsenko about Reveal: Read Eval Visualize Loop and cljfx - video November 1st., 6pm UTC - Clojure and data science in healthcare: Sivaram Arabandi \u0026amp; Pier Federico Gherardini - video October 3rd, 1pm-3pm UTC - Will Cohen - Clojure in Geography #1 - video September 26th, 1pm-2:30pm UTC - talks and discussion of machine learning libraries - video August 30th, 5pm-6:30pm UTC - public meeting with lightning talks and chat - video March 29th, 2pm-6pm UTC - COVID-19 online Hackathon - details here and here - video not published yet March 26th, 5pm-7pm UTC - Simon Belak - Exploratory analysis: automation, augmentation, and building tools for thought - video coming soon March 21st, 2pm-6pm UTC - COVID-19 online Hackathon - details here and here - video January 9th, 3pm-5pm UTC - Ludovic Courtès - Guix-Jupyter reproducible notebooks - video - slides - recap  2019 #\r October 28th, 6pm UTC - Tommi Reiman - Malli - video October 14th, 3pm UTC - Konrad Kühne - Datahike - video September 12th, 5pm UTC - Daniel Slutsky - R-interop - video August 29th, 5pm Jon Anthony - Hanami+Saite - video August 9th, 5pm UTC - Christopher Small - Oz - video Jul 18th, 5pm UTC - Chris Nuernberger - Libpython-clj - Alan Marazzi - Panthera - video June 20th, 2pm UTC - Martin Kavalar - Nextjournal - video May 15th, 10pm UTC - Carin Meier - Clojure MXNet - video April 15th, 3pm UTC - Chris Nuernberger - Tech.ml - video - transcript  Status reports #\rCommunity building #\r Sep 2nd, 2024, Clojurists Together Q3 2024 project: Scicloj - initial work plan - video Oct 25th, 2024, Scicloj status report: nurturing the Clojure open-source community, 2024-10-25 - video  Visual-tools #\r Mar. 13th, 2022, Visual tools compatibility - video  Clay #\r Dec. 17th, 2023, How to code a blog with Clay v2 (teaching Clay\u0026rsquo;s API, config, and Cursive integration) - video Dec. 17th, 2023, Clay v2 pre-release with CIDER - video Dec. 16th, 2023, Clay v2 pre-release with Calva - video  Notespace #\r Nov. 29th, 2021, Notepace v4 status - video Aug. 19th 2021, Notespace v3 status - video Aug 24th, 2020, Notespace v3 status - video  Recommended talks on other groups and channels #\rLondon Clojurians #\r June 9th, 2021 - Chris Nuernberger - High Performance Data With Clojure - video Oct. 10th, 2023 - Chris Nuernberger - High Performance Functional Data Science - video Oct. 25th, 2023 - Chris Badahdah - Portal Internals - video Dec. 12th, 2023 - Kira McLean, Timothy Prateley, \u0026amp; Daniel Slutsky - Cooking Up a Workflow for Data - video April. 30th, 2024 - Kira McLean - From data to insights: Clojure for data deep dive - video May 14th, 2024 - Dragan Djuric - Programming with Linear Algebra: Hello World - video  Boston Clojure #\r July 26th, 2021 - Daniel Slutsky - Data Science in Clojure: Almost Ready, Already Useful - video  Func Prog Sweden #\r Mar 22nd, 2023 - Mey Beisareon - Catch \u0026lsquo;em All: Efficient Massive Tabular Data Handling with Tablecloth - video  twiml #\r July 20th, 2020 - Panel: The Great Language (Un)Debate - video - a panel discussion of various languages and paradigms, with Chris Nuernberger representing Clojure  Clojure Corner #\r Nov 2024 - Jiri Knesl interviewing Chris Nuernberger - video Oct 2024 - Jiri Knesl interviewing Daniel Slutsky - video Sep 2024 - Jiri Knesl interviewing Kira McLean - video  "}).add({id:8,href:"/docs/resources/audio/",title:"Audio",description:"audio resources",content:"Recommended podcast conversations\nClojureStream #\rE72 Data Processing with Chris Nuernberger (part 1)\nE73 Data Processing with Chris Nuernberger (part 2)\nE74 Linear Algebra with David Pham\nE78 Data Science with Daniel Slutsky\nCognicast #\r2017-05-31 Episode 125 - Chris Nuernberger: deep learning (from the times of Cortex)\n2020-06-29 Episode 153 - Chris Nuernberger: [Libpython-clj](, etc.), etc.\n2020-10-25 Episode 154 - Dragan Djuric: deep learning, etc.\ndefn #\r#86 Kira McLean\nThe REPL #\r2018-12-05 13: High performance Clojure numerics with Chris Nuernberger\n2019-03-20 20: Clojure MXNet with Carin Meier\n2019-06-19 25: Dragan Djuric on Neanderthal\n2019-11-08 31: Joel Holdbrooks on Meander\n2023-01-13 47: Executable textbooks with Sam Ritchie\nSoftware Unscripted #\rDec. 2023 Making JITted Code Faster with Chris Nuernberger\n"}).add({id:9,href:"/docs/community/groups/ds4clj/",title:"{on hold} ds4clj: a data science course for Clojure devs",description:"A data science course for Clojure devs",content:" \r\r Following broad support on Clojureverse and Reddit conversations and elsewhere, we have been planning a data-science course for Clojure devs during 2023.  For various reasons of community priorities, this project was delayed. As of May 2024, we are reconsidering a revised version, which is probably a semi-structured series of talks alongside the more hands-on real-world-data group.\nThe content below is the old 2022-2023 draft.\nexploration meetings preparing for the course #\r 2022-07-24, initial brainstorming - event 2022-08-06, prep meeting about R \u0026amp; Tidyverse - event 2022-09-10, NLP study session 1 - summary \u0026amp; video 2022-10-30, NLP study session 2: Predict real vs. fake disaster tweets with DVC, Clojure and Python - summary \u0026amp; video 2022-11-05, an intro to table processing with Tablecloth - a session of the data-recur group - summary \u0026amp; video  goals #\r provide Clojure devs with basic theory, practices, and tools for common data science tasks;  also welcome open-minded people who are new to Clojure;   create learning resources for future use; encourage Clojurians to become active contributors to the emerging stack.  requirements #\r  at least one of the following:\n basic knowlede of Clojure a very open mind towards new programming languages    being ready to put a few hours a week into learning and practice, for a few months\n  chat #\r We\u0026rsquo;ll use a dedicated stream at the Clojurians Zulip chat. Stream: ds4clj It is recommended to follow a few of the other chat streams.  time #\r We\u0026rsquo;ll have a class once a month. We may have practice meetings in between. Each class is 3 hours, containing a lecture, a short break, and then discussion and Q\u0026amp;A.  recording #\r The meetings will be recorded and shared at the Clojurians Zulip chat. Some parts of the recordings (e.g. the lecture) will be shared publicly.  homework #\rHomework will be composed of:\n exercises on class topics personal projects (as individuals or in small groups) \u0026ndash; for example:  exploring datasets reproducing previously publushed research contributing to the stack of relevant libraries contributing to documentation    recommended resources #\r📖 [Clj4BT] Clojure for the Brave and True by Daniel Higginbotham\nThis is a great intro to Clojure.\nIt is useful for those who need a refresh with the language, or are new to it.\nNote: Chapter 2 suggests a specific development environment using Emacs (and is also a bit outdated). Emacs is wonderful, but it is not required for learning Clojure. Please reach out for help you wish to learn the book with another environment.\n📖 [R4DS] R for Data Science by Wickham and Grolemund\nThis is a good intro to the R language and its use in basic data-science tasks. It uses the Tidyverse collection of R packages and the so-called \u0026ldquo;tidy\u0026rdquo; approach, which is common in today\u0026rsquo;s R community.\nWe will use parts of it a basic intro to R. Knowing some R would make participants more independent in approaching study resources on their own. Python could have been another option, but we prefer R, since its ecosystem is arguably more in harmony with the functional approach and with expressing statistical ideas.\n📖 [Clj4DS] [Clojure for Data Science](https://www.packtpub.com/product/clojure-for-data-science/9781784397180** by Henry Garner\nThis is an excellent intro to data science topics, but it uses Clojure libraries which are not actively developed anymore.\nIt will be used for a few of the case studies, that we will adapt to this course.\nlist of topics (tentative) #\rlanguage #\r(mostly self learning)\n Clojure R  from today\u0026rsquo;s brainstorming:\ntheory \u0026amp; methods #\r(very basic intros)\n hello world: a typical workflow reshaping data (the \u0026ldquo;tidy\u0026rdquo; notion) correctness: testing, reproducibility descriptive statistics frequentist statistical inference supervised learning: principles \u0026amp; workflow, regression, classification working with tree-structured data probabilistic modelling through Bayesian statistics unsuprevised learning: clustering, dimension reduction linear algebra deep networks nlp async data streams graph data  libraries \u0026amp; tools #\r(some introduced briefly, some more thoroughly)\n tables: tablecloth, tech.ml.dataset arrays: dtype-next transducers: xforms, injest correctness (schemas): malli data vis \u0026amp; notebook tooling: portal, oz, clerk, clay data vis grammars: hanami, cljplot? math stats: fastmath, kixi.stats machine learning algorithms \u0026amp; pipelines: scicloj.ml interoperation w/ other languages: libpython-clj, clojisr Bayesian statistics: inferme, clj-stan tree data: clojure.walk, core.match, specter, meander, tupelo data ingestion: jdbc-next?, some web scraping, arrow? linear algebra, deep learning: neanderthal, deep-diamond parallel computing: geni, clojask nlp: datalinguist?, spacy through interop graph data: loom, asami, neo4j?  course plan (very tentative) #\r   month topic libraries homework      core topics           1 common workflow tablecloth, fastmath, hanami, learn some R and Clojure     scicloj.ml          2 descriptive stats, fastmath, kixi.stats apply to a real-world dataset    frequentist stats           3 data visualization hanami, cljplot? apply to a real-world dataset         4 arrays \u0026amp; tables dtype-next, tech.ml.dataset, apply to a real-world dataset,     tablecloth run some speed comparisons         5 basic supervised learning workflow, scicloj.ml, malli reproduce some kaggle notebooks    reproducibility, tests           6 probability, Bayesian stats inferme, clj-stan reading in Statistical Rethinking,      reproducing some examples         7 advanced supervised learning workflows scicloj.ml reproduce some kaggle notebooks,      explore variations \u0026amp; improvements         8 unsupervised learning fastmath, scicloj.ml reproduce some kaggle notebooks,      explore variations \u0026amp; improvements         9 python and R interop libpython-clj, clojisr go through some tutorials by      interop          specialized topics           10 working with tree-sructured data, clojure.walk, specter, meander, scrape \u0026amp; analyse some    web scraping hickory unstructured data         11 linear algebra, basic image processing neanderthal process some images         12 deep learning deep diamond reproduce some tutorials         13 async data streams xforms, kixi.stats analyse some user events         14 natural language processing datalinguist, analyse some texts,     spaCy through interop write rules to capture intents         15 graph data loom, asami, neo4j? analyse some graph data         16 big datasets geni, clojask, tech.ml.dataset query and analyse a big dataset,      run some speed comparisons          "}).add({id:10,href:"/docs/community/groups/ai-meetups/",title:"scicloj-ai-meetups: exploring the princples and uses of AI models",description:"Scicloj AI meetups",content:"📅Follow our meetings on the Clojure Calendar Feed📅\nThe goal of this series of meetups is to support our learning, as a community, of the landscape of ideas around AI models. It continues the journey of the scicloj-llm-meetups group and broandens the scope to various AI models, their principles, and applications.\nSome of the content here is specific to the Clojure ecosystem, but many parts of it will be helpful and interesting to broader audiences.\n Wish to present on a meetup? Please reach out  Meetings #\r 2025-03-08, Meeting 2: practice session - building a RAG 2025-02-22, Meeting 1: voice-fn - real-time voice-enabled AI pipelines - 🎥 summary \u0026amp; recording  Chat #\rWe will use the #scicloj-ai-meetups channel of the Clojurians Zulip Chat (requires login). Please join the Zulip chat before attending our meetings.\nOrganizers #\rOvi Stoica, Daniel Slutsky\nContact #\r If you have any thoughts or questions, let us talk.  "}).add({id:11,href:"/docs/community/groups/scinoj-light/",title:"SciNoj Light: an online conference for Clojure data-analysis stories",description:"an online conference for Clojure data-analysis stories",content:"In recent months, the Clojure toolkit for data and science has been maturing. Thus, in 2025, Scicloj can finally shift more resources into making it accessible and well-known.\nSciNoj Light is one of the first steps in that direction.\n📆 Event (also available at the Clojure Calendar Feed)\nWhat is it #\rSciNoj Light is an online conference where Clojurians will share their short-term data analysis stories.\nGoals #\r Encourage Clojurians to create small-but-complete usage stories of Noj and related libraries. Help them in the process. Focus on small stories and make it easy to contribute a topic. Explore our online conferencing practices in preparation for bigger \u0026ldquo;SciNoj\u0026rdquo; conferences where more established projects will be presented. Offer a cynosure for anybody who wishes to explore data with Clojure.  Timeline #\r Jan 20 - start discussing your initial ideas with the organizers Feb 15 - Call For Proposals opens Mar 15 - Call For Proposals closes - submit proposals (data analysis notebook drafts) Apr 1 - talks are selected May 16-17 - conference TBD - a possible additional weekend with extra talks  Chat #\rAll communication in preparation and during the conference will take place at the Clojurians Zulip chat, specifically in the #scinoj-light-1 channel.\nParticipating #\rParticipating is online and free.\nPresenting #\r You may submit a topic as a team of 1 to 3 people. At least one of the presenters has to know Clojure (or have the curiosity and capacity to learn). Other team members can contribute other parts of the story (e.g., domain knowledge and motivation). Pre-recorded talks are encouraged. The Q\u0026amp;A will be live. Proposals will include a data analysis notebook draft at Clojure-data-tutorials, the Noj book, or related spaces. The notebooks will be completed before the conference. It is recommended that proposals be worked on as projects on the Open Source Mentoring program. It is recommended to discuss your initial ideas with us as early as possible, and verify they make sense. If you are looking for ideas, let us chat. We may connect you with somebody to join on their project. All topics will be specific use cases of data analysis. You may also discuss tools, ideas, and methods but demonstrate them through use cases. The projects are not expected to be highly sophisticated but should be presented clearly. They should be reasonable projects that a Clojurian with an open mind can begin and finish in 3 months, working at least 6 hours a week, as a rule of thumb. The methods do not have to be sophisticated. Data visualization, statistics, math, and machine learning are encouraged but not required. If you have any thoughts or questions, let us talk.  The SciNoj conference series #\rMore SciNoj conferences are expected in the near future. Some of the future topics we are considering are (1) the uses of Clojure in teaching, (2) Clojure communities, and (3) Clojure in Science.\n"}).add({id:12,href:"/docs/community/groups/open-source-mentoring/",title:"Scicloj open-source mentoring",description:"Scicloj offers mentoring to Clojurians who wish to become active in open-source projects.\nPlease reach out\nWhat is that? #\rOne of the big challenges of getting involved in open source is gaining a sense of relevance: are the features you are working on actually valuable? That is one of the main benefits of collaborating with open-source groups such as Scicloj.\nScicloj offers a clear path to getting involved in open-source tools and libraries, both new and established.",content:"Scicloj offers mentoring to Clojurians who wish to become active in open-source projects.\nPlease reach out\nWhat is that? #\rOne of the big challenges of getting involved in open source is gaining a sense of relevance: are the features you are working on actually valuable? That is one of the main benefits of collaborating with open-source groups such as Scicloj.\nScicloj offers a clear path to getting involved in open-source tools and libraries, both new and established.\nIf you know some Clojure and wish to become an open-source contributor or simply want to help us out, this project is for you.\nWe need your help.\nHow does it work? #\r We will propose relevant projects that are known to be relevant, useful, and aligned with your knowledge and interests. You will pick a project. We will meet for 30-60 minutes every 1-2 weeks, depending on your pace and availability. We\u0026rsquo;ll assume you can also spend at least 4 hours a week working on your own.  What background knowledge is assumed? #\rThis depends on the project. Typically, one year of Clojure programming would be a reasonable background.\nWhat kinds of projects will we be working on? #\rSee the list of projects for a few examples we may propose.\nWho are the mentors I may meet? #\rHere is the list of mentors.\nThe assignment of a mentor will depend on the nature of the project you are working on, among other things.\nWhat would I benefit from participating? #\r Enriching your public profile as a developer with open-source activity. Gradually learning about the internals of fascinating Clojure libraries. Practicing the soft skills needed for remote, async collaboration in distributed teams across time zones. Gaining visible evidence for such communication and dev skills. Weekly interaction with experienced Clojurians. Opportunities to propose talks for conferences and prepare them with the support of the Scicloj group.  Where can I find more information? #\rWe will gradually collect the relevant resources under scicloj / open-source-mentoring.\n"}).add({id:13,href:"/docs/community/groups/interop/",title:"{coming soon} a dev group about interop and transpilers",description:"a dev group about interop and transpilers",content:"coming soon\n In this group, we wish to explore projects such as ClojisR\u0026rsquo;s code generation, a similar layer we have at Wolframite, and general transpilers such as Kalai and Std.lang.\nWe hope to find some common ground and principles across these projects.\nAs of May 2024, we are not organizing this group yet, but hopefully it will begin later during this year.\n"}).add({id:14,href:"/docs/community/groups/data-recur/",title:"data-recur: recurring updates \u0026 discussions around building the emerging data stack",description:"recurring updates \u0026 discussions around building the emerging data stack",content:" \r\rThis group is a space for recurring updates \u0026amp; discussions around the emerging Clojure stack for data processing, analysis, and visualization.\nFuture meetings #\r The R4Clj series meeting will continue in the near future. If you are interested in joining, please let us know.  Past meetings #\r 2025-01-31 - meeting 7 - R4Clj 1: Introducing R and the Tidyverse - 🎥 summary \u0026amp; recording 2024-08-08 - meeting 6: Clojure Meets Metal: Working with native libraries and the GPU - 🎥 summary \u0026amp; recording 2024-06-29 - meeting 5: Datajure - 🎥 summary \u0026amp; recording 2022-11-05 - meeting 4: Tablecloth - 🎥 summary \u0026amp; recording 2022-09-30 - meeting 3: Meander - 🎥 sumamry \u0026amp; video 2022-08-27 - meeting 2: Clojask, columns for Tablecloth, ds4clj, and more - 🎥 summary \u0026amp; recording 2022-07-29 - meeting 1: clojure.walk, community updates - 🎥 summary \u0026amp; recording  Future topics #\r Machine learning: Tablecloth, scicloj.ml, Metamorph Interop with a Python array library, e.g. Tensorflow, JAX, Xarray Going deeper into Meander General data science workflow with relevant tools and libraries  More info #\rOrganizers: Ethan Miller \u0026amp; Daniel Slutsky (please reach out at the Clojurians Zulip)\nFrequency of meetings: All-hands monthly meetings + ad-hoc meetings on specific topics\nChat stream: #data-recur\n"}).add({id:15,href:"/docs/community/groups/llm-meetups/",title:"{renamed} scicloj-llm-meetups: public meetings exploring the princples and use of large language models",description:"Scicloj LLM meetups",content:"📣 This 2023 group is being continued as the scicloj-ai-meetups group, starting Feb. 2025.\n\r\rThe goal of this series of meetups is to support our learning, as a community, of the new landscape of ideas around large language models.\nSome of the content here is specific to the Clojure ecosystem (e.g., discussing the use of LLMs from Clojure), but many parts of it could be helpful and interesting to broader audiences.\nBlog posts #\r2023-09-29, Following our first five LLM meetups\nMeetings #\rOur meetings are announced on the Clojure Calendar Feed.\nMost meetings will be recorded and shared publicly (🎥 Playlist).\n  #1 2023-05-26, Intro to LLMs - 🎥 summary \u0026amp; recording\n Martynas Maciulevičius provided an overview of the topic, introducing a few of the basic ideas behind LLM.    #2 2023-06-16, Intro to prompt engineering - 🎥 summary \u0026amp; recording\n Irfan Nurhadi Satria demonstrated some of the common methods of prompt engineering from Clojure. Daniel Slutsky added a brief introduction to the use of embeddings and vector databases.    #3 2023-06-17, LLMOps with Bosquet - 🎥 summary \u0026amp; recording\n Žygimantas Medelis discussed the currently emerging tooling ecosystem and then presented Bosquet, dived in a bit into its internals (e.g., the use of Slemer and Pathom), and discussed future directions.    #4 2023-07-14, Architectures and ideas behind transformer-based generative LLMs - 🎥 recording\n Dimid Duchovny briefly overviewed the history of LLM models and explained some of the core ideas behind them.. Then, he demisntrated using LLMs locally from Python, as well as through the OpenAI API.    #5 2023-09-24, Library overviews and selected discussions - 🎥 recording (summary coming soon)\n Projects on the agenda:  Clojure LLM Project Update multi-gpt Cohere Clojure SDK llama.clj Bosquet updates      #6 2023-11-17, Implementing research papers with Bosquet - 🎥 summary \u0026amp; recording\n Žygimantas Medelis will demonstrate how a couple of recent research papers can be implemented using Bosquet.    Other Upcoming meetups:\n Selected discussion topics Use cases and experiments \u0026ndash; short talks llamma.clj deep-dive    Meeting videos #\rPlaylist at the Scicloj channel\nClojure activity around LLMs #\rHere we list a few exciting projects that various Clojure groups and individuals have been working on.\n At the #clojurellm channel in the Clojurians Slack, a group of Clojurians is working on helping LLMs understand Clojure. This channel has been very active in sharing various relevant updates about the LLMs landscape. Ryan Robitaille has been sharing experiments connecting LLMs to dataflow UIs (Rabbit Remix). Matthew Downey has created rendergpt, a Chrome extension for rendering structured output from ChatGPT interactively.  Related past meetups #\r Use of LLMs  2023-04-01, a short demo in meeting 17 of the visual-tools group  Matthew Downey presented rendergpt.     NLP (not LLMs)  2022-09-10, NLP study session 1 - 🎥 summary \u0026amp; video  Dimid Duchovny gave an intro to Linguistics. Daniel Slutsky demosntrated using spaCy from Clojure for text classification. Carsten Behring added some comments about the broader picture of interop and machine learning in Clojure.   2022-10-30, NLP study session 2: Predict real vs. fake disaster tweets with DVC, Clojure and Python - :video: 🎥 summary \u0026amp; video  João Santiago gave a short intro intro to DVC. Carsten Behring demonstrated of a real-world NLP pipeine and discussed some promising directions in building machine-learning pipelines with DVC, Clojure, Python, and Metamorph / scicloj.ml.      "}).add({id:16,href:"/docs/community/groups/jointprob/",title:"{on hold} Jointprob: a probabilistic modeling and Bayesian statistics study community",description:"Probabilistic modeling and Bayesian Statistics study community",content:" \r\rJointprob is a study community for probabilistic modeling and Bayesian statistics, running since August 2022.\nEven though the community was initiated by Scicloj \u0026ndash; a community for data science in Clojure \u0026ndash; this study community is not focused on any single technology or programming language. Rather, it is open to people of diverse technical backgrounds and will continually seek dialogue and mutual inspiration across languages and technologies.\nAs of November 2024, we are planning to renew the meetings after a break of a few months.\nGoal #\rThis is a long-term project aiming to create a space for Bayesian practitioners, as well as aspiring ones, to learn \u0026amp; explore together and support each other.\nWe wish to be inclusive to people of diverse backgrounds and thus create a common ground where we can broaden our perspectives and inspire each other.\nJoining #\rIt is never too late to join us \u0026ndash; we will help you to catch up.\nPlease use the Joining Jointprob form to join the community, to be added to our calendar events, or to update your preferences and personal information.\nAlso, you are always invited to write to us.\nSchedule #\rOur upcoming journey: Regression and Other Stories #\r August 2024 (TBD): an intro session and a first look into the book by Gelman, Hill, and Vehtari  Standalone sessions #\r 2023-08-16/26: Hierarchical Models with David MacGillivray - blog post - 🎥 video 🎥 2023-09-20/30: Probability basics for Bayesian analysis - blog post - recording will be shared soon  Our second reading journey: Bayesian Modeling and Computation #\r 2023-01-07: Bayesian Modeling and Computation: meeting the book\u0026rsquo;s author Ravin Kumar and brainstorming our new reading journey \u0026ndash; see the blog post. 2023-01-21: Discussing our reading plans 2023-02-8/11: a motivating intro \u0026ndash; Bayesian Methods for Hackers chapter 1 2023-02-15/18: probability \u0026amp; statistics review \u0026ndash; Think Stats 2e chapters 1-6 2023-02-22/25: starting the main journey \u0026ndash; Bayesian Modeling and Computation chapter 1 (mostly focused on section 1.1) 2023-03-8/11: Bayesian Modeling and Computation chapter 1: exercises and section 1.4 (priors) 2023-03-22/25: Bayesian Modeling and Computation chapter 2 2023-04-05/08: Bayesian Modeling and Computation chapter 2, mostly section 2.5 2023-04-19/22: Bayesian Modeling and Computation chapter 3 2023-05-3/6: Bayesian Modeling and Computation chapter 3, starting from section 3.3 2023-05-17/20: Bayesian Modeling and Computation chapter 4 2023-05-31/06-03: Tensorflow Probability 2023-06-14/17: selected dopics from chapters 5,6,7 of Bayesian Modeling and Computation 2023-06-28/07-01: chapter 8 of Bayesian Modeling and Computation 2023-07-12/15: chapter 9 of Bayesian Modeling and Computation  Our first reading journey: Statistical Rethinking #\r 2022-07-22, initial brainstorming - event 2022-08-06, prep meeting about R \u0026amp; Tidyverse - event (joint event with the ds4clj course) 2022-08-15 - beginning of regular meetings (see the Groups below). 2022-08-15/17/19/20, Session 1: Statistical Rethinking chapter 1, R4DS sections 1-4 2022-08-31, 2022-09-2/3, Session 2: Statistical Rethinking chapter 2 2022-09-14/16/17, Session 3: chapter 2 - review of main notions and a look into exercises 2022-09-28/09-30/10-01, Session 4: chapter 3 2022-10-12/14/15, Session 5: chapter 4 2022-10-26/28/29, Session 6: chapter 4 - continued 2022-11-9/11/12, Session 7: chapter 5 2022-11-23/25/26, Session 8: chapter 6, personal regression projects 2022-12-7/9/10, Session 9: more about DAGs (section 6.4), chapter 7 2022-12-24, Session 10: information theory \u0026amp; information criteria - reporting on personal reading  Past Agenda #\rIn the past, we have been meeting biweekly (in groups) to discuss our joint reading and projects.\nOur joint reading journeys have been around the first half of Statistical Rethinking by Richard McElreath, and then around Bayesian Modeling and Computation in Python by Osvaldo A. Martin, Ravin Kumar and Junpeng Lao.\n Present Agenda #\rAs of August 2024, we are planning to begin a new reading journey around Regression and Other Stories by Andrew Gelman, Jennifer Hill, and Aki Vehtari\nCalendar events #\rPlease refer to the Joining section to join our calendar events.\nChat #\rThe community uses Zulip, an open-source chat platform. In some other groups we\u0026rsquo;ve been running, we\u0026rsquo;ve found it useful for chat, in-depth discussion threads, and knowledge management.\nOur Zulip organization is jointprob.zulipchat.com.\nYou may wish to learn a little bit about the concepts of Zulip streams and topics. Note that all streams and topics (and even single messages) have URLs, that you can open at separate tabs in your browser.\nIt would be wonderful to present yourself at the personal intros stream, preferably as a new topic thread.\nVideo platform #\rFor video meetings, we currently use Zoom. The link is shared in the calendar events.\nRecordings #\rSome parts of the sessions are recorded and shared internally in the Zulip chat. Possibly, we will also share some recorded parts publicly.\nProjects #\rParticipants take on projects as individuals or in small groups.\nExample projects:\n read an article and share it with the group reimplement an example we have learned using a different technology explore a dataset with the methods learned  Recommended background #\rParticipants are assumed to have some relevant knowledge.\nTo appreciate the content we are studying, it is recommended to have the following:\n basic knowledge of probability and statistics (say, college-level intro courses) programming experience in any language (a few months) experience exploring data an open mind  If you are not sure whether this journey fits your background, please write to us. We can think together.\nPrinciples #\rThe following core principles are typical of Scicloj study groups.\nNo experts. We do not assume that anybody is an expert in the field. We come to learn together with a student mindset.\nA clear path. We will be very thoughtful about the agenda and where we wish to go. We will continually rethink and adapt our pathway going there.\nConfused together. It is just fine to be confused. We will be there together and seek clarity together.\nBeing active. We encourage members to learn independently and take on projects. In a sense, its purpose is (also) to support those individual journeys.\nMutual curiosity. We make serious efforts to be inclusive to participants of various backgrounds. The different perspectives of our friends are part of what we wish to learn.\nContact #\rPlease reach out:\n scicloj@gmail.com Daniel Slutsky at the chat  "}).add({id:17,href:"/docs/community/groups/probabilistic-modelling-study-group/",title:"{renamed} probabilistic modelling study group",description:"{renamed} probabilistic modelling study group",content:" This group has been renamed as jointprob.\n"}).add({id:18,href:"/docs/community/groups/",title:"Dev \u0026 study groups",description:"The various dev groups and study groups organized by Scicloj",content:"Some parts of the Scicloj activity are driven by regular meetings in various groups.\nSome of these meetings are public and shared at the Clojure calendar feed. Some study groups such as Jointprob have their own spaces for sharing events.\n"}).add({id:19,href:"/docs/community/groups/real-world-data/",title:"real-world-data: a space to discuss your data and science projects in Clojure",description:"The real-world-data group",content:"The real-world-data group is about the use of Clojure for data and science problems.\nSchedule #\rThe group meets regularly every second Friday, 17:00 UTC time zone. Please let us know if you wish to join but the time does not work. We may adjust it.\n Feb 21th, 2025 - meeting 25 - agenda: Preparation for SciNoj Light - 📆 event Feb 7th, 2025 - meeting 24 - agenda: A full-stack project in Phel Lang, the Tableplot transpile API, and the Std.lang universile transpiler Jan 24th, 2025 - meeting 23 - agenda: learning R and the tidyverse Jan 10th, 2025 - meeting 22 - agenda: community building, exploring the datatypes of array-programming libraries Dec 21th, 2024 - meeting 21 - agenda: numerical linear algebra - 📖worked on this draft Dec 13th, 2024 - meeting 20 - (details in Zulip chat) Nov 29th, 2024 - meeting 19 - agenda: updates and discussion (details in Zulip chat) Nov 15th, 2024 - meeting 18 - agenda: Library plans - composing Fastmath with Tablecloth Nov 1st, 2024 - meeting 17 - agenda: Noj tutorials (details in Zulip chat) Oct 18th, 2024 - meeting 16 - agenda: diverse updates (details in Zulip chat) - publicly shared recording:  🎥 Jarkko Saltiola: tools for pipelines, bb-glitchtip   Oct 4th, 2024 - meeting 15 - agenda: diverse updates (details in Zulip chat) - publicly shared redordings:  🎥 Kyle Passarelli: OAuth2 with Clojure and Temporal 🎥 Adham Omram: Experience Conducting a Clojure Training   Sep 20th, 2024 - meeting 14 - agenda: diving into libraries (details in Zulip chat) Sep 6th, 2024 - meeting 13 - agenda: Heart-of-Clojure pre-discussions, clojure-data-tutorials, library updates Aug 23th, 2024 - meeting 12 - agenda: diverse updates (details in Zulip chat) - publicly shared recordings:  🎥 Blender \u0026amp; Basilisp, Wordpress \u0026amp; Phel - Jarkko Saltiola 🎥 Noj, open-source-mentoring - Daniel Slutsky   Aug 9th, 2024 - meeting 11 - agenda: diverse updates (details in Zulip chat) July 26th, 2024 - meeting 10 - agenda: diverse updates (details in Zulip chat) July 12th, 2024 - meeting 9 - agenda: diverse updates (details in Zulip chat) June 28th, 2024 - meeting 8 - topic: high-performance numerics (cont.) June 14th, 2024 - meeting 7 - topic: high-performance numerics using Neanderthal May 31th, 2024 - meeting 6 - focus topic: Intro to linear algebra with applications using Neanderthal - a revised walkthrough will be shared publicly  If you wish to present or discuss anything, please let us know. The agenda is updating gradually in the group\u0026rsquo;s Zulip chat.   May 17th, 2024 - meeting 5 May 3rd, 2024 - meeting 4 April 19th, 2024 - meeting 3  publicly shared recording: 🎥 Bayesian Statistics with Stan by Daniel Slutsky   April 5th, 2024 - meeting 2 March 22th, 2024 - meeting 1  publicly shared recordings: 🎥 Kyle Passarelli 🎥 Adham Omran followup tutorial: 📓 chicago bike trips followup video: 🎥 noj - getting started - from raw data to a blog post    Goal #\rThis group is a space for individuals, companies, academic groups, and organizations to share their experiences and support each other in using Clojure for data \u0026amp; science projects.\nData analytics, machine learning, AI, data engineering, scientific computing, and data visualization are all welcome.\nIt is a safe space for sharing successes, troubles, problems, hopes, and doubts.\nParticipating #\r⭐ It is never too late to join this group. ⭐\nIf you wish to use Clojure for a data or science project and prefer not to be alone in that journey, this group is for you.\nWe will also assume that you either know some Clojure or have a serious intention to learn it.\nTo join, please reach out to us by contacting Daniel Slutsky at the Clojurians Zulip chat, or ar the various Scicloj ways of contact. We will think together about whether this group fits your path.\nSessions #\rAs a group, we will have biweekly sessions to discuss our ongoing projects. Participants will bring their own data \u0026amp; science problems to the sessions and actively work on them between sessions.\nSome of the time will be dedicated to learning relevant practices, ideas, and technical topics.\nWe will also have one-on-one or small-group sessions to support individual journeys.\nRecordings #\rThe sessions will be partially recorded.\nMost of the recordings will not be shared publicly but rather internally as a tool for us to catch up and recall our past discussions. When recordings are planned to be made public, we will first check with all participants.\nPairing #\rIn the group, we will seek opportunities of collaborations.\nA scientist may wish to pair with a Clojure engineer and explore something together, a Clojurian person may be curious about joining a scientific project, etc. We will be looking for such cases and try to help in matching them.\nContributing #\rIn your projects using the emerging Clojure stack, there will often be opportunities to contribute back to the libraries you use. We will encourage that and help you in considering about fruitful directions and connecting with the relevant library authors.\nWe will highly encourage contributing documentation and tutorials and will use the Clojure Data Scrapbook as a central space for such content.\nChat #\rThe group will use the Clojurians Zulip chat. Specifically, the #real-world-data stream.\nOld timeline (archive) #\r Feb. 25th 2022 - two special sessions we had a while back - announcement (recorded but never published) late June 2023 - initial survey (then the project went on hold) March 2024 - starting the group\u0026rsquo;s regular path  "}).add({id:20,href:"/docs/community/groups/visual-tools/",title:"visual-tools: regular updates \u0026 discussions around building visual tooling",description:"The visual-tools group",content:"📅Follow our meetings on the Clojure Calendar Feed📅\nThe goal of this group is to create collaborations in learning and building Clojure tools data visualization, literate programming, and UI design.\nThe authors of several actively developed tools have been involved in offering talks and collaborating in this space (Chlorine, Clover, Calva and its Notebooks, Portal, Viscous, Sidebar, Nette, Fabricate, Omni-trace, Oz, Saite, Notespace, Clay, Claykind, Goldly, Saturn, clt-tiles, Obsidian Wielder, Cardigan Bay, Platypub, Data Rabbit, Clerk, Mosaic, MetaREPL, Meyvn, badspreadsheet, Noj, ggclj, Space-Age, FlowStorm, etc.).\nOur meetings are announced on the Clojure Calendar Feed.\n  Wish to present on a meetup? Please reach out\n  Meeting 30 (Jan 23th 2025): Workflow Demos 4 - LLMs in Emacs for Clojure - 🎥 summary \u0026amp; recording\n  Meeting 29 (Jan 15th 2025): Workflow Demos 3 - 🎥 summary \u0026amp; recording\n  Meeting 28 (Jan 7rd 2025): Workflow Demos 2 - 🎥 summary \u0026amp; recording\n  Meeting 27 (Jan 3rd 2025): Workflow Demos 1 - 🎥 summary \u0026amp; recording\n  Meeting 26 (June 16th 2024): Gemini, Space-Age, protocols from the REPL - 🎥 summary \u0026amp; recording\n  Meeting 25 (June 7th 2024): keg-party - 🎥 summary \u0026amp; recording\n  Meeting 24 (Apr. 26th 2024): badspreadsheet \u0026amp; HTMX - 🎥 summary \u0026amp; recording\n  Meeting 23 (Apr. 7th 2024): ggplot study session 3 - 🎥 summary \u0026amp; recording\n  Meeting 22 (Mar. 17th 2024): ggplot study session 2 - 🎥 summary \u0026amp; recording\n  Meeting 21 (Feb. 25th 2024): ggplot study session 1 - 🎥 summary \u0026amp; recording\n  Meetings 20 (Dec. 1st 2023): Various updates - 🎥 summary \u0026amp; recording\n  Meeting 19 (July 7th 2023): Electric - 📆 event (log in to Clojureverse to view)\n  Meeting 18 (May 27th 2023): Mosaic and other updates - 🎥 summary \u0026amp; recording\n  Meeting 17 (April 1st 2023): various updates - 🎥 summary \u0026amp; recording\n  Meeting 16 (Nov. 19th 2022): Calva Notebooks and Portal - 🎥 summary \u0026amp; recording\n  Meeting 15 (Oct. 23th 2022): a common ground for notes with Kindly - 🎥 summary \u0026amp; recording\n  Meeting 14 - special meeting (Oct. 20th 2022): Clerk workshop - event (not recorded)\n  Meeting 13 - monthly (Oct. 14th 2022): Interactive visualizations: Shiny, Shadow-cljs, Clay - 🎥 summary \u0026amp; recording\n  Meeting 12 - special meeting (Sep. 9h 2022): Data Rabbit - 🎥 summary \u0026amp; recording\n  Meeting 11 - monthly meeting (Sep. 2th 2022): tooling for learning resources - 🎥 summary \u0026amp; recording\n  Meeting 10 - monthly meeting (Aug. 5th 2022): Oz - 🎥 summary \u0026amp; recording\n  Meeting 9 - general monthly (July 2nd 2022): clj-tiles, Obsidian Wielder, Cardigan Bay, Platypub - 🎥 summary \u0026amp; recording\n  Meeting 8 - general monthly (June 3rd 2022): data cookbook, goldly studio, re-frame state management - 🎥 summary \u0026amp; recording\n  Meeting 7 - a deep dive into Saturn (May. 27th 2022) - 🎥 summary \u0026amp; recording\n  Meeting 6 - general monthly (May. 6th 2022) - 🎥 summary \u0026amp; recording\n  Meeting 5 - general monthly (Apr. 2nd 2022) - 🎥 summary \u0026amp; recording\n  Meeting 4 - studying Clerk internals (Mar. 25th 2022) - 🎥 summary \u0026amp; recording\n  Meeting 3 - general montlhy meeting (Mar. 5th 2022) - 🎥 summary \u0026amp; recording\n  Meeting 2 - compatibility across tools (Feb. 19th 2022) - 🎥 summary \u0026amp; recording\n  Meeting 1 - the beginning (Feb. 4th 2022) - 🎥 [summary \u0026amp; recording](https://clojureverse.org/t/visual-tools-meeting-1-summary-video/**.\n  Meeting videos Playlist at the Scicloj channel\nOrganizers: Lukas Domalga, Kira McLean, Daniel Slutsky (please reach out at the Clojurians Zulip)\nFrequency of meetings: All-hands meeting roughly every month + ad-hoc meetings of sub-groups on specific topics\nChat stream: #visual-tools at Clojurians Zulip and at Clojurians Slack\nResources: You are invited to add your experiments and notes.\n  relevant tools and libraries\n  scicloj/visual-tools-experiments - repo for collaboration.\n  common notes - from meetings, etc.\n  background - the visual tools session at the re:Clojure Data Science Special (Dec. 5th 2021), overviewing some of the relevant tools in the field\n  Video status reports:\n Mar. 13th, 2022, Visual tools compatibility - describing the Portal-Clerk-Kindly-nREPL experiment    "}).add({id:21,href:"/docs/community/groups/ml-study/",title:"{on hold} ml-study: practicing the use of the emerging stack",description:"The ml-study group",content:"(this group is on hold)\nThe ml-study group has been a space for regular meetings for practicing the usage of the emerging Clojure data science stack.\nIt has been serving us not only in learning, but also in testing the emerging stack and creating a collection of usage examples.\nOrganizer: Daniel Slutsky (please reach out at the Clojurians Zulip)\nChat stream: #ml-study\n"}).add({id:22,href:"/docs/community/groups/sci-fu/",title:"{on hold} sci-fu: regular discussions of various dev projects",description:"The sci-fu group",content:"(this group is on hold)\nThe sci-fu (Scicloj foundations) has been a space for regular discussions of various dev projects.\nIn a sense, it is a study group where we learn how to contribute to the ecosystem \u0026ndash; For a few of us, sci-fu has been a place to discuss our first steps as open-source contributors.\nIn another sense, it is a dev group where we discuss common priorities, share our progress and challenges, and explore future directions.\nTypically, each session has one or two main topics, that we dive into together. Sci-fu has been a place for us to learn some of the fundamental building blocks of the emerging Clojure data stack, such as the dtype-next library for high-performance data.\nOrganizer: Ethan Miller (please reach out at the Clojurians Zulip)\nTypical time of meetings: on hold at the moment\nChat stream: #sci-fu\n"}).add({id:23,href:"/docs/community/groups/sicmutils/",title:"{on hold} sicmutils: studying the sicmutils library, physics, and geometry",description:"The sicmutils group",content:"(this group is on hold)\nThe sicmutils group has been studying the Sicmutils computer algebra system and the SICM book, and discussing various projects by group members around the topics of math and physics in Clojure.\nIts explorations have affected the development of some of our tools and libraries for data-visualization and literate programming, among other things.\nOrganizer: Daniel Slutsky (please reach out at the Clojurians Zulip)\nTypical time of meetings: ad hoc meetings by group members' initiatives\nChat stream: #sicmutils\n"}).add({id:24,href:"/docs/community/groups/wolfram-clojure-bridge/",title:"{on hold} wolfram-clojure-bridge: discussing the usage and development of the bridge to Wolfram Language",description:"The Wolfram-Clojure bridge group",content:"This 2022 group has been discussing the usage and development of the bridge to Wolfram Language.\nWe used to meet on the last Thursday of every month, and spend the time with overviews of new developments, discussion of language design and library design, and explorations of the Wolfram Language ecosystem.\nThough the regular group meetings have been discontinued, the work and discussion of Wolframite are ongoing. See the #wolfram-clojure-bridge stream at the Clojurians Zulip chat.\nFor more background about the project, please see the Dec. 5th 2021 talk of Pawel Ceranka.\n"}).add({id:25,href:"/docs/community/",title:"Community",description:"Getting to know the Scicloj community",content:""}).add({id:26,href:"/docs/resources/",title:"Resources",description:"Resources for data science in Clojure",content:""}).add({id:27,href:"/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener('input',b,!0);function b(){var b,e;const d=5;b=this.value,e=a.search(b,{limit:d,enrich:!0});const c=new Map;for(const a of e.flatMap(a=>a.result)){if(c.has(a.doc.href))continue;c.set(a.doc.href,a.doc)}if(suggestions.innerHTML="",suggestions.classList.remove('d-none'),c.size===0&&b){const a=document.createElement('div');a.innerHTML=`No results for "<strong>${b}</strong>"`,a.classList.add("suggestion__no-results"),suggestions.appendChild(a);return}for(const[h,g]of c){const b=document.createElement('div');suggestions.appendChild(b);const a=document.createElement('a');a.href=h,b.appendChild(a);const e=document.createElement('span');e.textContent=g.title,e.classList.add("suggestion__title"),a.appendChild(e);const f=document.createElement('span');if(f.textContent=g.description,f.classList.add("suggestion__description"),a.appendChild(f),suggestions.appendChild(b),suggestions.childElementCount==d)break}}})()